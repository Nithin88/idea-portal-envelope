<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>getideas</name>
        <operation_script><![CDATA[(function process(request, response) {

    var typeVal = String(request.queryParams.type),
    	ideas = [],
    	voteObj;

    if (typeVal !== 'my-votes') {
		
		// As long as the type isn't "my-votes", we can query the ideas table

        var ideaGr = new GlideRecord('idea');
        ideaGr.addActiveQuery();

        if (typeVal === 'all') {
            ideaGr.addEncodedQuery('opened_byISNOTEMPTY');
        }

        if (typeVal === 'my-ideas') {
            ideaGr.addQuery('opened_by', gs.getUserID());
        }

        ideaGr.query();

        // Loop through the results and build the array.
        while (ideaGr.next()) {

            voteObj = getVotes(ideaGr.getValue('sys_id'));

            ideas.push({
            	title: ideaGr.getDisplayValue('short_description'),
            	sys_id: ideaGr.getDisplayValue('sys_id'),
            	description: ideaGr.getDisplayValue('business_case'),
            	openedByName: ideaGr.getDisplayValue('opened_by'),
            	number: ideaGr.getDisplayValue('number'),
            	openedBySysId: ideaGr.getValue('opened_by'),
            	createdOnDate: ideaGr.getDisplayValue('sys_created_on'),
            	voteCount: voteObj.count,
            	iVoted: voteObj.voted
            });
        }

    } else {

    	// Otherwise, we need to query the votes table

        var voteGr = new GlideRecord('x_snc_idea_portal_vote');
        voteGr.addQuery('user', gs.getUserID());
        voteGr.addQuery('voted', true);
        voteGr.query();
        
        // Loop through the results and build the array.
        while (voteGr.next()) {

        	voteObj = getVotes(voteGr.getValue('idea'));

            ideas.push({
            	title: voteGr.idea.short_description.getDisplayValue(),
            	sys_id: voteGr.idea.sys_id.getDisplayValue(),
            	description: voteGr.idea.business_case.getDisplayValue(),
            	openedByName: voteGr.idea.opened_by.getDisplayValue(),
            	number: voteGr.idea.number.getDisplayValue(),
            	openedBySysId: voteGr.idea.opened_by.toString(),
            	createdOnDate: voteGr.idea.sys_created_on.getDisplayValue(),
            	voteCount: voteObj.count,
            	iVoted: voteObj.voted
            });
        }

    }

    return ideas;

    function getVotes(sys_id) {

        var voteGr = new GlideRecord('x_snc_idea_portal_vote');

        voteGr.addQuery('idea', sys_id);
        voteGr.addQuery('voted', true);
        voteGr.query();

        var voted = false;

        while (voteGr.next()) {

            if (voteGr.getValue('user') === gs.getUserID()) {
                voted = true;
            }
        }

        return {
        	count: voteGr.getRowCount(),
        	voted: voted
        };
    }

})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_idea_portal/ideas/getideas</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/getideas</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>sush.chan</sys_created_by>
        <sys_created_on>2018-01-04 00:29:47</sys_created_on>
        <sys_id>938c637fdb5fcb0094407f6bbf961913</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>getideas</sys_name>
        <sys_package display_value="Idea Portal" source="x_snc_idea_portal">4da17b35db9fc70094407f6bbf961985</sys_package>
        <sys_policy/>
        <sys_scope display_value="Idea Portal">4da17b35db9fc70094407f6bbf961985</sys_scope>
        <sys_update_name>sys_ws_operation_938c637fdb5fcb0094407f6bbf961913</sys_update_name>
        <sys_updated_by>dylan.lindgren</sys_updated_by>
        <sys_updated_on>2018-03-11 03:13:12</sys_updated_on>
        <web_service_definition display_value="Ideas">a85c2f3fdb5fcb0094407f6bbf9619cb</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
